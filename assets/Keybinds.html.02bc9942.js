import{e as n}from"./app.6a3fb329.js";const s={},a=n('<h1 id="keybinding-api" tabindex="-1"><a class="header-anchor" href="#keybinding-api" aria-hidden="true">#</a> Keybinding API</h1><p>Kambrik lets us easily register new keybinds, with several options available to us.</p><h3 id="keyboard-keybinds" tabindex="-1"><a class="header-anchor" href="#keyboard-keybinds" aria-hidden="true">#</a> Keyboard Keybinds</h3><div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code><span class="token keyword">val</span> eraseKeybind <span class="token operator">=</span> Kambrik<span class="token punctuation">.</span>Input<span class="token punctuation">.</span><span class="token function">registerKeyboardBinding</span><span class="token punctuation">(</span>\n    GLFW<span class="token punctuation">.</span>GLFW_KEY_BACKSPACE<span class="token punctuation">,</span>\n    keyTranslation <span class="token operator">=</span> <span class="token string">&quot;mod.key.erase&quot;</span><span class="token punctuation">,</span>\n    keyCategory <span class="token operator">=</span> <span class="token string">&quot;My Mod&quot;</span>\n<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    onDown <span class="token punctuation">{</span> <span class="token comment">/* ... */</span> <span class="token punctuation">}</span>\n    onUp <span class="token punctuation">{</span> <span class="token comment">/* ... */</span> <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="mouse-keybinds" tabindex="-1"><a class="header-anchor" href="#mouse-keybinds" aria-hidden="true">#</a> Mouse Keybinds</h3><div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code><span class="token keyword">val</span> mouseKeybind <span class="token operator">=</span> Kambrik<span class="token punctuation">.</span>Input<span class="token punctuation">.</span><span class="token function">registerMouseBinding</span><span class="token punctuation">(</span>\n    GLFW<span class="token punctuation">.</span>GLFW_MOUSE_BUTTON_1<span class="token punctuation">,</span>\n    keyTranslation <span class="token operator">=</span> <span class="token string">&quot;mod.key.dothing&quot;</span><span class="token punctuation">,</span>\n    keyCategory <span class="token operator">=</span> <span class="token string">&quot;My Mod&quot;</span>\n<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    onDown <span class="token punctuation">{</span> <span class="token comment">/* ... */</span> <span class="token punctuation">}</span>\n    onUp <span class="token punctuation">{</span> <span class="token comment">/* ... */</span> <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="other-considerations" tabindex="-1"><a class="header-anchor" href="#other-considerations" aria-hidden="true">#</a> Other Considerations</h3><p>Both keybind registrations take an extra option boolean, <code>realTime: Boolean = false</code>. By default, all Kambrik keybinds are processed per tick. In practice, this is fine for most cases and should be left at it&#39;s default value whenever possible. In certain circumstances, you may need frame perfect keybind input, with which you can set <code>realTime</code> to <code>true</code>. This will cause the keybind to check for updates each frame, instead of each tick.</p>',8);s.render=function(n,s){return a};export{s as default};
